"""Add exdates and end date to recurring tasks

Revision ID: 9ac0b0048da1
Revises: 52345a08fbdd
Create Date: 2025-10-06 23:00:44.846170

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9ac0b0048da1'
down_revision: Union[str, None] = '52345a08fbdd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table('plantings', schema=None) as batch_op:
    #     batch_op.drop_constraint(None, type_='foreignkey')
    #     batch_op.create_foreign_key(batch_op.f('fk_plantings_garden_plan_id_garden_plans'), 'garden_plans', ['garden_plan_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('recurring_tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('recurrence_end_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('exdates', sa.JSON(), nullable=True))

    # with op.batch_alter_table('tasks', schema=None) as batch_op:
    #     batch_op.drop_constraint(None, type_='foreignkey')
    #     batch_op.create_foreign_key(batch_op.f('fk_tasks_garden_plan_id_garden_plans'), 'garden_plans', ['garden_plan_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table('tasks', schema=None) as batch_op:
    #     batch_op.drop_constraint(batch_op.f('fk_tasks_garden_plan_id_garden_plans'), type_='foreignkey')
    #     batch_op.create_foreign_key(None, 'garden_plans', ['garden_plan_id'], ['id'])

    with op.batch_alter_table('recurring_tasks', schema=None) as batch_op:
        batch_op.drop_column('exdates')
        batch_op.drop_column('recurrence_end_date')

    # with op.batch_alter_table('plantings', schema=None) as batch_op:
    #     batch_op.drop_constraint(batch_op.f('fk_plantings_garden_plan_id_garden_plans'), type_='foreignkey')
    #     batch_op.create_foreign_key(None, 'garden_plans', ['garden_plan_id'], ['id'])

    # ### end Alembic commands ###
